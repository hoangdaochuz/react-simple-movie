{"version":3,"file":"static/js/6.26a25ac7.chunk.js","mappings":"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","sources":["components/button/Button.js","components/loading/LoadingSkeleton.js","components/movie/MovieCard.js","components/banner/Banner.js","components/movie/MovieList.js","components/pages/HomePage.js","config.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({onClick, children,bgColor = \"primary\", full, className,...props}) => {\r\n  let bgColorValue = \"bg-primary\"\r\n  switch (bgColor) {\r\n    case \"primary\":\r\n      bgColorValue = \"bg-primary\"\r\n      break;\r\n    case \"secondary\":\r\n      bgColorValue = \"bg-secondary\"\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <button\r\n        className={` px-4 py-2  rounded-lg mt-auto ${full?'w-full': ''} ${bgColorValue} ${className}`}\r\n        onClick={onClick}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nconst LoadingSkeleton = ({width, height, className}) => {\r\n    return (\r\n        <div className={`loading-skeleton ${className}`} style={{\r\n            width: width,\r\n            height: height,\r\n        }}>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingSkeleton;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../button/Button\";\r\nimport PropTypes from 'prop-types'\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\r\n\r\nconst MovieCard = ({ title, poster, release, rating, id }) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"movie-card p-3 bg-slate-800 rounded-lg text-white flex flex-col select-none h-full\">\r\n      <img\r\n        className=\"w-full h-[250px] object-cover mb-3\"\r\n        src={`http://image.tmdb.org/t/p/w500/${poster}`}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"flex flex-col flex-1 mb-2\">\r\n        <h3 className=\"text-xl font-bold mb-2\">{title}</h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50\">\r\n          <span>{release}</span>\r\n          <div>\r\n            {rating}\r\n            <FontAwesomeIcon className=\"text-yellow-500 ml-2\" icon={faStar} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Button onClick={() => {\r\n          navigate(`/movie/${id}`);\r\n          window.location.reload();\r\n        }} bgColor=\"secondary\">Watch Now</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string,\r\n  poster: PropTypes.string,\r\n  release: PropTypes.string,\r\n  rating: PropTypes.number,\r\n  id: PropTypes.number,\r\n}\r\n\r\nconst FallbackComponent = ()=>{\r\n  return <p className=\"bg-red-50 text-red-500\"> Some thing went wrong !!</p>\r\n}\r\n\r\nexport const MovieCardSkeleton = ()=>{\r\n  return (\r\n    <div className=\"movie-card p-3 bg-slate-800 rounded-lg text-white flex flex-col select-none h-full\">\r\n      \r\n      <LoadingSkeleton className=\"w-full h-[250px] object-cover mb-3\"></LoadingSkeleton>\r\n      <div className=\"flex flex-col flex-1 mb-2\">\r\n        <h3 className=\"text-xl font-bold mb-2\">\r\n          <LoadingSkeleton width=\"100%\" height=\"40px\"></LoadingSkeleton>\r\n        </h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50\">\r\n          <span>\r\n            <LoadingSkeleton width=\"50px\" height=\"20px\"></LoadingSkeleton>\r\n          </span>\r\n          <div>\r\n            <LoadingSkeleton width=\"30px\" height=\"20px\"></LoadingSkeleton>\r\n            <FontAwesomeIcon className=\"text-yellow-500 ml-2\" icon={faStar} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <LoadingSkeleton width=\"100%\" height=\"50px\" className=\"rounded-lg\"></LoadingSkeleton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withErrorBoundary(MovieCard, {\r\n  FallbackComponent,\r\n});\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport {Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay } from 'swiper';\r\nimport 'swiper/css/autoplay';\r\nimport Button from '../button/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nconst BannerItemStyle = styled.div`\r\n  @media screen and (max-width: 350px){\r\n    .description{\r\n      width: 85%;\r\n    }\r\n    .category{\r\n      flex-direction: column;\r\n      row-gap: 15px;\r\n      width: 100%;\r\n\r\n    }\r\n  }\r\n`\r\nconst BannerItem = ({item})=>{\r\n  const navigate = useNavigate()\r\n  const {title, poster_path, id} = item\r\n  return (\r\n    <BannerItemStyle className=\"w-full h-full rounded-lg relative\">\r\n          <div className=\"overlay absolute inset-0 rounded-lg bg-gradient-to-t from-[rgba(0,0,0,0.5)] to-[rgba(0,0,0,0.5)]\"></div>\r\n          <img className=\"w-full h-full object-cover rounded-lg object-top\" src={`http://image.tmdb.org/t/p/original/${poster_path}`} alt=\"\"  />\r\n          <div className=\"description text-white absolute left-5 bottom-5 w-full mb-5\">\r\n            <h2 className=\"text-3xl font-bold mb-5\">{title}</h2>\r\n            <div className=\"category flex justify-start gap-x-3 mb-5\">\r\n              <span className=\"px-3 py-1 rounded-lg border border-white\">Action</span>\r\n              <span className=\"px-3 py-1 rounded-lg border border-white\">Avenger</span>\r\n              <span className=\"px-3 py-1 rounded-lg border border-white\">Drama</span>\r\n            </div>\r\n            {/* <button className=\"text-white bg-primary px-3 py-1 rounded-md font-medium\">Watch Now</button> */}\r\n            <Button onClick={() => {\r\n          navigate(`/movie/${id}`);\r\n          window.location.reload();\r\n        }}>Watch Now</Button>\r\n          </div>\r\n    </BannerItemStyle>\r\n  )\r\n}\r\n\r\nconst Banner = () => {\r\n  const [movies, setMovies] = useState([])\r\n  const getUpComingMovie = async()=>{\r\n    const res = await axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=8c14f06191c793a87a59fd44effbcffd')\r\n    return res.data\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getUpComingMovie().then((res)=>{\r\n      setMovies(res.results)\r\n    })\r\n  },[])\r\n\r\n  console.log(movies)\r\n  return (\r\n    <section className=\"banner h-[500px] page-container pb-20 overflow-hidden mb-20\">\r\n      <Swiper slidesPerView={1} grabCursor={true} modules={[Autoplay]} autoplay={{delay: 3000}}>\r\n        {movies && movies.map((movie)=>{\r\n          return (\r\n            <SwiperSlide key={movie.id}>\r\n              <BannerItem item={movie}/>\r\n            </SwiperSlide>\r\n          )\r\n        })}\r\n      </Swiper>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Banner;","import React, { useEffect, useState } from 'react';\r\nimport { Swiper,SwiperSlide } from 'swiper/react';\r\nimport MovieCard, { MovieCardSkeleton } from './MovieCard';\r\n\r\nimport {tmdbAPI} from '../../config'\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\"\r\nimport {withErrorBoundary} from 'react-error-boundary'\r\n\r\n\r\nconst MovieList = ({type = \"now_playing\"}) => {\r\n  // https://api.themoviedb.org/3/movie/now_playing?api_key=8c14f06191c793a87a59fd44effbcffd\r\n  const [movies, setMovies] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getListMovie = async()=>{\r\n    const res = await axios.get(tmdbAPI.getMovieList(type))\r\n    return res.data\r\n  }\r\n  useEffect(()=>{\r\n    setLoading(true)\r\n    getListMovie().then((res)=>{\r\n      setMovies(res.results)\r\n      setLoading(false)\r\n    })\r\n  },[])\r\n  // console.log(movies)\r\n  return ( <div className=\"movie-list\">    \r\n           {/*Khong nen de thuoc tinh grid, grid-col vao the div chua swiper boi vi lam vay thi no khong chay duoc.  */}\r\n           {loading && <Swiper spaceBetween={40} slidesPerView={\"auto\"} grabCursor={true}>\r\n              <SwiperSlide>\r\n                <MovieCardSkeleton></MovieCardSkeleton>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <MovieCardSkeleton></MovieCardSkeleton>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <MovieCardSkeleton></MovieCardSkeleton>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <MovieCardSkeleton></MovieCardSkeleton>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <MovieCardSkeleton></MovieCardSkeleton>\r\n              </SwiperSlide>\r\n           </Swiper>}\r\n          {!loading && <Swiper spaceBetween={40} slidesPerView={\"auto\"} grabCursor={true}>\r\n            {movies && movies.map((movie, index)=>{\r\n              return (<SwiperSlide key={index}>\r\n                        <MovieCard title={movie.title} poster={movie.poster_path} release={movie.release_date} rating = {movie.vote_average} id={movie.id}/>\r\n                      </SwiperSlide>)\r\n            })}\r\n          </Swiper>}\r\n        </div>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  type: PropTypes.string,\r\n}\r\n\r\nconst FallbackComponent = ()=>{\r\n  return <p className='bg-red-50 text-red-500'>Some thing went wrong!</p>\r\n}\r\n\r\nexport default withErrorBoundary(MovieList,{\r\n  FallbackComponent,\r\n});","import React, { Fragment } from 'react';\r\nimport Banner from '../banner/Banner';\r\nimport MovieList from '../movie/MovieList';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Banner/>\r\n      <section className=\"movie-layout page-container pb-20\">\r\n        <h2 className=\"text-white text-2xl capitalize font-bold mb-10\">Now Playing</h2>\r\n        <MovieList/>\r\n      </section>\r\n      <section className=\"movie-layout page-container pb-20\">\r\n        <h2 className=\"text-white text-2xl capitalize font-bold mb-10\">Top Rated Movies</h2>\r\n        <MovieList type=\"top_rated\"/>\r\n      </section>\r\n      <section className=\"movie-layout page-container pb-20\">\r\n        <h2 className=\"text-white text-2xl capitalize font-bold mb-10\">Trending</h2>\r\n        <MovieList type=\"popular\"/>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;","export const fetcher = (url) => fetch(url).then((res) => res.json());\r\nexport const apiKey = \"8c14f06191c793a87a59fd44effbcffd\"\r\nconst endpointAPI = 'https://api.themoviedb.org/3/movie'\r\nexport const tmdbAPI = {\r\n  getMovieList: (type)=> `${endpointAPI}/${type}?api_key=${apiKey}`,\r\n  getMovieDetail: (movieId)=>`${endpointAPI}/${movieId}?api_key=${apiKey}`,\r\n  getMovieMeta: (movieId, type)=>`${endpointAPI}/${movieId}/${type}?api_key=${apiKey}`,\r\n  getMoviesInPage: (page)=>`${endpointAPI}/popular?api_key=${apiKey}&page=${page}`,\r\n  getMoviesInPageWithSearch: (searchValue, page)=>`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchValue}&page=${page}`\r\n\r\n}"],"names":["onClick","children","bgColor","full","className","props","bgColorValue","width","height","style","MovieCardSkeleton","icon","faStar","withErrorBoundary","title","poster","release","rating","id","navigate","useNavigate","src","alt","Button","window","location","reload","FallbackComponent","BannerItemStyle","styled","BannerItem","item","poster_path","useState","movies","setMovies","getUpComingMovie","axios","res","data","useEffect","then","results","console","log","slidesPerView","grabCursor","modules","Autoplay","autoplay","delay","map","movie","type","loading","setLoading","getListMovie","tmdbAPI","spaceBetween","MovieCard","index","release_date","vote_average","Fragment","apiKey","endpointAPI","getMovieList","getMovieDetail","movieId","getMovieMeta","getMoviesInPage","page","getMoviesInPageWithSearch","searchValue"],"sourceRoot":""}